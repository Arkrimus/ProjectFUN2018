class HealthBar : ZilchComponent
{
  [Dependency] var Area : Area;
  
  var MaxHealth : Real = 50;
  var CurrentValue : Real = 50;
  var MeterScaling : Action;
  var OriginalSize : Real2;
  var ScaleRate : Real = 50;
  
  function Initialize(init : CogInitializer)
  {
    this.OriginalSize = Real2(this.MaxHealth, 1);
    Action.Property(this.Owner.Actions, @this.Area.Size, Real2(this.MaxHealth,1), 0.5, Ease.Linear);
    Zero.Connect(this.Space, Events.UpdateHealthbar, this.UpdateHealthBar);
  }

  
  function UpdateHealthBar(event : DamageEvent)
  {
    if (this.MeterScaling != null)
      this.MeterScaling.Cancel();
    
    this.CurrentValue = event.NewHealth;
    var percentage = this.CurrentValue/this.MaxHealth;
    var targetSize = percentage*this.OriginalSize;
    targetSize.Y = this.OriginalSize.Y;
    
    var sizeDifference = Math.Abs(this.Area.Size.X - targetSize.X);
    var duration = sizeDifference/ this.ScaleRate;
    
    this.MeterScaling = Action.Property(this.Owner.Actions, @this.Area.Size, targetSize, duration, Ease.Linear);
  }
}
